"""create all tables

Revision ID: ee85002c7dca
Revises: 
Create Date: 2025-04-08 15:40:00.980585

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ee85002c7dca'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attendance_reasons',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('employees',
    sa.Column('employee_code', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('employee_code'),
    sa.UniqueConstraint('email')
    )
    op.create_table('telework_allowances',
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('month >= 1 AND month <= 12', name='check_telework_allowances_month_range'),
    sa.PrimaryKeyConstraint('year', 'month')
    )
    op.create_table('work_units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('minute', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('minute >= 1', name='check_work_units_valid_minute'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_companies',
    sa.Column('company_code', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('contact', sa.String(length=255), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('work_unit_id', sa.Integer(), nullable=False),
    sa.Column('morning_break_start', sa.Time(), nullable=True),
    sa.Column('morning_break_end', sa.Time(), nullable=True),
    sa.Column('lunch_break_start', sa.Time(), nullable=True),
    sa.Column('lunch_break_end', sa.Time(), nullable=True),
    sa.Column('evening_break_start', sa.Time(), nullable=True),
    sa.Column('evening_break_end', sa.Time(), nullable=True),
    sa.Column('night_break_start', sa.Time(), nullable=True),
    sa.Column('night_break_end', sa.Time(), nullable=True),
    sa.Column('late_night_break_start', sa.Time(), nullable=True),
    sa.Column('late_night_break_end', sa.Time(), nullable=True),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['work_unit_id'], ['work_units.id'], ),
    sa.PrimaryKeyConstraint('company_code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('health_checkups',
    sa.Column('employee_code', sa.String(length=100), nullable=False),
    sa.Column('checkup_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_code'], ['employees.employee_code'], ),
    sa.PrimaryKeyConstraint('employee_code', 'checkup_date')
    )
    op.create_table('daily_attendances',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_code', sa.String(length=100), nullable=False),
    sa.Column('company_code', sa.String(length=100), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('reason_id', sa.Integer(), nullable=True),
    sa.Column('is_paid_leave', sa.Boolean(), nullable=False),
    sa.Column('hourly_leave_start', sa.Time(), nullable=True),
    sa.Column('hourly_leave_end', sa.Time(), nullable=True),
    sa.Column('visiting_place', sa.String(length=255), nullable=True),
    sa.Column('route', sa.String(length=255), nullable=True),
    sa.Column('travel_expense', sa.Integer(), nullable=True),
    sa.Column('is_telecommuting', sa.Boolean(), nullable=False),
    sa.Column('actual_cost', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_code'], ['client_companies.company_code'], ),
    sa.ForeignKeyConstraint(['employee_code'], ['employees.employee_code'], ),
    sa.ForeignKeyConstraint(['reason_id'], ['attendance_reasons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_code', 'company_code', 'report_date', name='unique_daily_attendance')
    )
    op.create_table('employee_assignments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_code', sa.String(length=100), nullable=False),
    sa.Column('company_code', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_code'], ['client_companies.company_code'], ),
    sa.ForeignKeyConstraint(['employee_code'], ['employees.employee_code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fixed_holidays',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_code', sa.String(length=100), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('day', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.CheckConstraint('day >= 1 AND day <= 31', name='check_fixed_holidays_day_range'),
    sa.CheckConstraint('month >= 1 AND month <= 12', name='check_fixed_holidays_month_range'),
    sa.ForeignKeyConstraint(['company_code'], ['client_companies.company_code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('monthly_attendances',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_code', sa.String(length=100), nullable=False),
    sa.Column('company_code', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('commuter_pass_cost', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.CheckConstraint('month >= 1 AND month <= 12', name='check_monthly_attendances_month_range'),
    sa.ForeignKeyConstraint(['company_code'], ['client_companies.company_code'], ),
    sa.ForeignKeyConstraint(['employee_code'], ['employees.employee_code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_code', 'company_code', 'year', 'month', name='unique_monthly_attendance')
    )
    op.create_table('variable_holidays',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_code', sa.String(length=100), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_code'], ['client_companies.company_code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('variable_holidays')
    op.drop_table('monthly_attendances')
    op.drop_table('fixed_holidays')
    op.drop_table('employee_assignments')
    op.drop_table('daily_attendances')
    op.drop_table('health_checkups')
    op.drop_table('client_companies')
    op.drop_table('work_units')
    op.drop_table('telework_allowances')
    op.drop_table('employees')
    op.drop_table('attendance_reasons')
    # ### end Alembic commands ###
